---
permalink: /mailhandler.php
---
<?php
// mailhandler.php

declare(strict_types=1);

require __DIR__ . '/vendor/autoload.php';

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;
use Dotenv\Dotenv;

// Load environment variables from .env (safe if file is missing)
if (class_exists(Dotenv::class)) {
    $dotenv = Dotenv::createImmutable(__DIR__);
    $dotenv->safeLoad();
}

if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
    // Direct hits to this file go home
    header('Location: https://andyfitzgeraldconsulting.com');
    exit;
}

// ---- Config ----
$to = 'andy@andyfitzgeraldconsulting.com';

// From/admin address varies by host
$host = $_SERVER['HTTP_HOST'] ?? '';
if ($host === 'dev.andyfitzgeraldconsulting.com') {
    $adminEmail = 'inquiry@dev.andyfitzgeraldconsulting.com';
} elseif ($host === 'www.andyfitzgeraldconsulting.com' || $host === 'andyfitzgeraldconsulting.com') {
    $adminEmail = 'inquiry@andyfitzgeraldconsulting.com';
} else {
    $adminEmail = 'local@andyfitzgeraldconsulting.com';
}

// ---- Input ----
$name    = isset($_POST['name'])    ? stripslashes(trim((string)$_POST['name']))    : '';
$email   = isset($_POST['email'])   ? stripslashes(trim((string)$_POST['email']))   : '';
$subject = isset($_POST['subject']) ? stripslashes(trim((string)$_POST['subject'])) : '';
$org     = isset($_POST['org'])     ? (string)$_POST['org']                          : '';
$message = isset($_POST['message']) ? (string)$_POST['message']                      : '';

$errors = [];

// Required checks
if ($name === '')   { $errors[] = 'Name is empty'; }
if ($email === '')  { $errors[] = 'Email is empty'; }
elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) { $errors[] = 'Email is invalid'; }
if ($subject === ''){ $errors[] = 'Subject is empty'; }
if ($message === ''){ $errors[] = 'Message is empty'; }

// Header injection check (defense-in-depth)
$pattern = '/[\r\n]|Content-Type:|Bcc:|Cc:/i';
if (preg_match($pattern, $name) || preg_match($pattern, $email) || preg_match($pattern, $subject)) {
    http_response_code(400);
    exit('Message not sent: Header injection detected.');
}

// ---- reCAPTCHA v2 (checkbox/invisible) ----
$recaptchaSecret = $_ENV['RECAPTCHA_SECRET'] ?? '';
$token = $_POST['g-recaptcha-response'] ?? '';
$remoteIp = $_SERVER['REMOTE_ADDR'] ?? null;

// Collect errors so we can show precise messages
$recaptchaErrors = [];

// Basic presence checks
if ($recaptchaSecret === '') {
    $recaptchaErrors[] = 'Server misconfiguration: reCAPTCHA secret is missing.';
}
if ($token === '') {
    $recaptchaErrors[] = 'reCAPTCHA was not completed. Please check the “I’m not a robot” box and try again.';
}

$response = null;

if (empty($recaptchaErrors)) {
    // Verify with Google (cURL is more reliable than file_get_contents)
    $ch = curl_init('https://www.google.com/recaptcha/api/siteverify');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query([
        'secret'   => $recaptchaSecret,
        'response' => $token,
        'remoteip' => $remoteIp, // optional
    ]));
    $verifyResponse = curl_exec($ch);
    $curlErr = curl_error($ch);
    curl_close($ch);

    if ($verifyResponse === false) {
        $recaptchaErrors[] = 'Could not reach Google reCAPTCHA to verify your submission. Please try again.';
        // (Optional) admin detail for logs:
        // error_log('reCAPTCHA cURL error: ' . $curlErr);
    } else {
        $response = json_decode($verifyResponse, true);
        if (!is_array($response)) {
            $recaptchaErrors[] = 'Unexpected reCAPTCHA response format. Please try again.';
        }
    }
}

if (empty($recaptchaErrors) && is_array($response)) {
    $success    = $response['success'] ?? false;
    $hostname   = $response['hostname'] ?? '';
    $errorCodes = $response['error-codes'] ?? [];

    if (!$success) {
        // Map common v2 error codes to clear messages
        $map = [
            'missing-input-secret'   => 'Server misconfiguration: reCAPTCHA secret is missing.',
            'invalid-input-secret'   => 'Server misconfiguration: reCAPTCHA secret is invalid.',
            'missing-input-response' => 'reCAPTCHA was not completed. Please try again.',
            'invalid-input-response' => 'Your reCAPTCHA token expired or was invalid. Please complete the checkbox again.',
            'bad-request'            => 'Bad verification request. Please try again.',
            'timeout-or-duplicate'   => 'Your reCAPTCHA token timed out or was already used. Please submit the form again.',
        ];
        if (!empty($errorCodes)) {
            foreach ($errorCodes as $code) {
                $recaptchaErrors[] = $map[$code] ?? 'reCAPTCHA failed. Please try again.';
            }
        } else {
            $recaptchaErrors[] = 'reCAPTCHA failed. Please try again.';
        }
    } else {
        // Optional: sanity check the hostname Google saw
        $expectedHost = $_SERVER['HTTP_HOST'] ?? '';
        if ($hostname && $expectedHost && stripos($hostname, $expectedHost) === false) {
            $recaptchaErrors[] = 'reCAPTCHA hostname mismatch. Please refresh and try again.';
            // (Optional) admin detail for logs:
            // error_log("reCAPTCHA hostname mismatch: got $hostname, expected $expectedHost");
        }
    }
}

if (!empty($recaptchaErrors)) {
    echo "<div style='color:red;'>";
    foreach ($recaptchaErrors as $msg) {
        echo '<p>' . htmlspecialchars($msg, ENT_QUOTES, 'UTF-8') . '</p>';
    }
    echo "</div>";
    exit;
}

// ---- Compose body (HTML) ----
$body = sprintf(
    'Name: %s<br />Email: %s<br />Organization: %s<br />Message: %s',
    htmlspecialchars($name, ENT_QUOTES, 'UTF-8'),
    htmlspecialchars($email, ENT_QUOTES, 'UTF-8'),
    htmlspecialchars($org, ENT_QUOTES, 'UTF-8'),
    nl2br(htmlspecialchars($message, ENT_QUOTES, 'UTF-8'))
);

// ---- Send via Gmail SMTP using PHPMailer ----
$mail = new PHPMailer(true);

try {
    $mail->isSMTP();
    $mail->Host       = 'smtp.gmail.com';
    $mail->SMTPAuth   = true;
    $mail->Username   = $_ENV['AFC_MAIL_USERNAME    ']     ?? ''; 
    $mail->Password   = $_ENV['AFC_MAIL_PASSWORD'] ?? ''; // 16-char App Password
    $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;    // or ENCRYPTION_SMTPS with Port 465
    $mail->Port       = 587;

    // From/To/Reply-To
    $mail->setFrom($adminEmail, 'Website Inquiry');
    $mail->addAddress($to);
    if ($email !== '') {
        $mail->addReplyTo($email, $name !== '' ? $name : $email);
    }

    // Content
    $mail->isHTML(true);
    $mail->CharSet  = 'UTF-8';
    $mail->Subject  = $subject;
    $mail->Body     = $body;
    $mail->AltBody  = strip_tags(str_replace('<br />', "\n", $body));

    $mail->send();

    if ($host === 'dev.andyfitzgeraldconsulting.com') {
        header('Location: https://dev.andyfitzgeraldconsulting.com/contact-success/');
    } else {
        header('Location: https://andyfitzgeraldconsulting.com/contact-success/');
    }
    exit;

} catch (Exception $e) {
    $err = htmlspecialchars($mail->ErrorInfo ?: $e->getMessage(), ENT_QUOTES, 'UTF-8');
    echo "<p style='color: red;'>There was a server error while sending this message: {$err}</p>";
    exit;
}